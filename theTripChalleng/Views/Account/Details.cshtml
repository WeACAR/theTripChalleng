@* this is the account details page shows user information: Image, Name, Phone Number, Total Points with edit option (for edit all fields) *@
@model theTripChalleng.ViewModels.UserDetailsViewModel

<div class="row">
    <div class="col-md-4">
        <h2>User Details</h2>
        @* if model image is null then set default image to avatar *@
        @if (Model.User.Image == null)
        {
            <img src="/Img/Avatar.jpg" alt="@Model.User.Name" class="img-fluid" />
        }
        else
        {
            <img src="data:image/png;base64,@Convert.ToBase64String(Model.User.Image)" alt="@Model.User.Name"
                class="img-fluid rounded-circle" />
        }
    </div>
    <div class="col-md-8">
        <div class="card p-2 align-items-start">
            <h2>@Model.User.Name</h2>
            <p><strong>Phone Number:</strong> @Model.User.Phone</p>
            <p><strong>Total Points:</strong> @Model.User.TotalPoints</p>
            <a href="@Url.Action("Edit", "Account", new { id = Model.User.Id })" class="btn btn-primary ms-auto">Edit</a>
        </div>
        <div class="card mt-3">
            <h3>Points History</h3>
            @if (Model.PointsHistory.Any())
            {
                <ul class="list-group">
                    @foreach (var point in Model.PointsHistory.OrderByDescending(p => p.CreatedAt))
                    {
                        <li class="list-group-item">
                            <strong>@point.CreatedAt.ToShortDateString()</strong> - @point.Points points
                            <span class="text-muted">@(@point.CriterionName ?? "No Criterion")</span>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>No points history available.</p>
            }
        </div>

        <div class="card mt-3">
            <h3>Assigned Criteria</h3>
            @{
                var assignedCriteria = ViewBag.PendingAssignedCriteria as IEnumerable<theTripChalleng.ViewModels.AssignedCriteriaViewModel>;
            }
            @if (assignedCriteria != null && assignedCriteria.Any())
            {
                <ul class="list-group">
                    @foreach (var assigned in assignedCriteria.OrderByDescending(a => a.AssignedCriterias?.CreatedAt))
                    {
                        <li class="list-group-item">
                            <strong>@assigned.AssignedCriterias?.CreatedAt.ToShortDateString()</strong> - @assigned.Criteria?.CriteriaName
                            <span class="text-muted">
                                @* style if the value true or false or not yet approved by checking IsAdminAction *@
                                @if (assigned.AssignedCriterias?.IsAdminAction == true)
                                {
                                    <span class="badge @(assigned.AssignedCriterias?.Approved == true ? "bg-success" : "bg-danger")">
                                    @if (assigned.AssignedCriterias?.Approved == true )
                                    {
                                        <i class="bi bi-check-circle-fill"></i> <span>مقبولة</span>
                                    }
                                    else
                                    {
                                        <i class="bi bi-x-circle-fill"></i> <span>مرفوضة</span>
                                    }
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-warning">في انتظار الموافقة</span>
                                }
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>No assigned criteria available.</p>
            }
        </div>

        <div class="card mt-3">
            <h3>Points Requests</h3>
            @if (Model.PointsRequests.Any())
            {
                <ul class="list-group">
                    @foreach (var request in Model.PointsRequests.OrderByDescending(r => r.CreatedAt))
                    {
                        <li class="list-group-item">
                            <strong>@request.CreatedAt.ToShortDateString()</strong> - @request.RequestedPoints points
                            <span class="text-muted">@request.CriterionName</span>
                            @* add if statment for the status if pending, approved or rejected *@
                            <span class="badge @(request.StatusName == "Approved" ? "bg-success" : request.StatusName == "Rejected" ? "bg-danger" : "bg-warning")">
                                @if (request.StatusName == "Approved")
                                {
                                    <i class="bi bi-check-circle-fill"></i> <span>مقبولة</span>
                                }
                                else if (request.StatusName == "Rejected")
                                {
                                    <i class="bi bi-x-circle-fill"></i> <span>مرفوضة</span>
                                }
                                else
                                {
                                    <i class="bi bi-clock-fill"></i> <span>في انتظار الموافقة</span>
                                }
                            </span>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>No points requests available.</p>
            }
        </div>
    </div>
</div>
