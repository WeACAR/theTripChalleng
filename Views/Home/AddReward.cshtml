@* make AddReward view *@
@model theTripChalleng.ViewModels.AddRewardViewModel

<h2>Add Reward</h2>

<form asp-action="AddReward" method="post" enctype="multipart/form-data">
    <div class="form-group">
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Description"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="MinPoints"></label>
        <input asp-for="MinPoints" class="form-control" />
        <span asp-validation-for="MinPoints" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="CategoryId"></label>
        <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.Categories"></select>
        <span asp-validation-for="CategoryId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ImageFile">Upload Image</label>
        <input type="file" asp-for="ImageFile" class="form-control-file" accept="image/*" />
        <span class="text-muted">أو اسحب وأفلت الصورة هنا</span>
    </div>

    <button type="submit" class="btn btn-primary">Add Reward</button>
</form>
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}